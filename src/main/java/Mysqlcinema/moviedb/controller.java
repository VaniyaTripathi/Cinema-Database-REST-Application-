package Mysqlcinema.moviedb;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import Mysqlcinema.moviedb.Movie;
import Mysqlcinema.moviedb.UserRepository;

@Controller
@RequestMapping(path="/movieSQL")

public class controller {
	@Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
	
	@PostMapping // Map ONLY POST Requests
	  public @ResponseBody String addNewMovie (@RequestBody Movie mov) {
	    userRepository.save(mov);
	    return "Saved";
	  }

	  @GetMapping
	  public @ResponseBody Iterable<Movie> getAllStudents() {
	    // This returns a JSON or XML with the users
	    return userRepository.findAll();
	  }
	  
	  @GetMapping("{id}")
	  public @ResponseBody Movie getMovie(@PathVariable Integer id) {
		  return userRepository.findById(id).get();
	  }
	  
	  
	  @DeleteMapping("{id}")
	  public @ResponseBody String deleteMovie(@PathVariable Integer id) {
		  userRepository.deleteById(id);
		  return "deleted";
	  }
	  
	  @PutMapping("{id}")
	  public @ResponseBody String updateMovie(@PathVariable Integer id, @RequestBody Movie updatedMovie) {
	      
	      if (userRepository.findById(id).isPresent()) {
	          Movie movieToUpdate = userRepository.findById(id).get();
	          movieToUpdate.setName(updatedMovie.getName()); // Update other fields as needed
	          userRepository.save(movieToUpdate);
	          return "Updated";
	      } else {
	          return "Movie not found";
	      }
	  }


}
